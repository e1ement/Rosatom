// <auto-generated />
using System;
using Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Entities.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20201114203028_ChangedWorks")]
    partial class ChangedWorks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Entities.Models.ValueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("Entities.Models.WorkEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AddedChildrenCost")
                        .HasColumnType("numeric");

                    b.Property<decimal>("AddedCost")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DecDayCost")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("FactStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("IncDayCost")
                        .HasColumnType("numeric");

                    b.Property<string>("JobName")
                        .HasColumnType("text");

                    b.Property<int>("MinimalDuration")
                        .HasColumnType("integer");

                    b.Property<decimal>("MinimalDurationCost")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("NewPlannedStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("NormDuration")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PlannedStartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("WorkEntityWorkEntity", b =>
                {
                    b.Property<Guid>("ChildWorksId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParentWorksId")
                        .HasColumnType("uuid");

                    b.HasKey("ChildWorksId", "ParentWorksId");

                    b.HasIndex("ParentWorksId");

                    b.ToTable("WorkEntityWorkEntity");
                });

            modelBuilder.Entity("WorkEntityWorkEntity", b =>
                {
                    b.HasOne("Entities.Models.WorkEntity", null)
                        .WithMany()
                        .HasForeignKey("ChildWorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.WorkEntity", null)
                        .WithMany()
                        .HasForeignKey("ParentWorksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
